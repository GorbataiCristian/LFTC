Alphabet:
a. Upper (A-Z) and lower case letters (a-z) of the English alphabet
letter ::= "A" | "B" | ... | "Z" | "a" | "b" | ... | "z"

b. Underline character '_';
c. Decimal digits (0-9);
ndigit ::= "1" | "2" | ... | "9"
digit ::= "0" | ndigit
1.Lexic:
a.Special symbols, representing:
- operators + - * / := < <= = >=
operator ::= "+" | "-" | "*" | "%" | "=" | "<" | ">" | "<=" | ">=" | "=="

- separators [ ] { }  : ; space
separator ::= "[" | "]" | "(" | ")" | "{" | "}" | ":" | ";" | " "

- reserved words:

reserved_word ::= "int" | "string" | "float" | "double" | "boolean" | "class" | "if" 
                | "loop" | "while" | "in" | "const" | "public" | "private" | "protected" | "break" | "continue" | "return" | "True" | "False"
b.identifiers
-a sequence of letters and  digits, such that the first character is a letter; the rule is:identifier ::= letter | letter{letter}{digit}letter ::= "A" | "B" | . ..| "Z"digit ::= "0" | "1" |...| "9"
identifier ::= ["_"] (letter | digit) {letter | digit | "_"}

c.constants
1.integer
number ::= ndigit {digit} | "0"
integer ::= ["-" | "+"] ndigit {digit} | "0"
float ::= (["-" | "+"] ndigit {digit} | "0" ) "." {digit}
2.character
character ::= letter | digit

3.string
string ::= character{character}